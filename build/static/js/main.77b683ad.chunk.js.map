{"version":3,"sources":["services/persons.js","components/Filter.js","components/ContactForm.js","components/ContactList.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_persons","newObject","axios","post","then","response","data","get","id","delete","concat","put","Filter","_ref","newQuery","handleQueryChange","react_default","a","createElement","value","onChange","ContactForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","ContactList","isFiltering","persons","filteredList","deletePerson","ListItem","_ref2","name","number","key","onClick","contactList","map","person","Notification","message","content","status","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewQuery","_useState9","_useState10","setFilteredList","_useState11","_useState12","setFiltering","_useState13","_useState14","setMessage","useEffect","personService","initialPersons","filter","toLowerCase","indexOf","showNotification","setTimeout","updatePerson","personObject","window","confirm","returnedPerson","catch","error","console","log","components_Notification","components_Filter","event","target","length","components_ContactForm","preventDefault","nameExist","find","components_ContactList","n","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.77b683ad.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request =  axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst addPerson = (newObject) => {\n  const request =  axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updatePerson = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {addPerson, getAll, deletePerson, updatePerson}","import React from 'react'\n\nconst Filter = ({newQuery, handleQueryChange}) => (\n  <form>\n    <div>\n      Filter shown with \n      <input \n        value={newQuery} \n        onChange={handleQueryChange}/>\n    </div>\n  </form>\n)\n\nexport default Filter","import React from 'react'\n\nconst ContactForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => (\n  <form onSubmit={addName}>\n    <div>\n      Name: \n      <input \n        value={newName} \n        onChange={handleNameChange}/>\n    </div>\n    <div>\n      Number: \n      <input \n        value={newNumber} \n        onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default ContactForm","import React from 'react'\n\nconst ContactList = ({isFiltering, persons, filteredList, deletePerson}) => {\n\n  const ListItem = ({name,number, deletePerson}) => (\n    <li key={name}>\n      {name} {number} \n      <button onClick={deletePerson}>Delete</button>\n    </li>\n  )\n\n  const contactList = !isFiltering ? persons : filteredList\n\n  return(\n    <div>\n      { \n        contactList.map( person => \n          <ListItem\n            key={person.name} \n            name={person.name}  \n            number={person.number}\n            deletePerson={()=>deletePerson(person.id, person.name)}\n          />\n        )\n      }\n    </div>\n  )\n}\n\nexport default ContactList","import React from 'react'\n\nconst Notification = ({message}) => {\n  const {content, status} = message;\n  \n  if(!content) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: status === 'success' ? 'green' : 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {content}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newQuery, setNewQuery] = useState('')\n  const [filteredList, setFilteredList] = useState(persons)\n  const [isFiltering, setFiltering] = useState(false)\n  const [message, setMessage] = useState('')\n  \n  // Retrieve Data during Initialization\n  const initialHook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => \n        setPersons(initialPersons)\n      )\n  }\n  \n  useEffect( initialHook, [])\n\n  // Filter Contact List when newQuery updates\n  const filterPhoneBook = () => {\n    const filteredList = persons.filter( \n      (person) => person.name.toLowerCase().indexOf(newQuery.toLowerCase()) !== -1 \n    )\n    setFilteredList(filteredList)\n  }\n\n  useEffect(filterPhoneBook, [newQuery])\n\n  const showNotification = (content, status) => {\n    setMessage({\n      content: content, \n      status: status\n    })\n    setTimeout(() => setMessage({\n      content: '', \n      status: ''})\n    , 4000)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const nameExist = persons.find( person => person.name.toLowerCase() === newName.toLowerCase() )\n    \n    if(nameExist) {\n      updatePerson(nameExist.id, personObject)\n      return\n    }\n\n    personService\n      .addPerson(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        showNotification(`Added ${returnedPerson.name} to the contact list.`, 'success')\n      })\n      .catch(error => {\n        console.log(error.response.data.error);\n        showNotification(error.response.data.error);\n      })\n  }\n\n  const updatePerson = (id, personObject) => {\n    const result = window.confirm(`${personObject.name} was already added to the contact list. Would you like to update it's phone number?`)\n    \n    if(result) {\n      personService\n        .updatePerson(id, personObject)\n        .then(returnedPerson => {\n          setPersons(persons.map( person =>\n            person.id !== id ? person : returnedPerson\n          ))\n          showNotification(`Updated ${returnedPerson.name} phone number`, 'success')\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n          showNotification(error.response.data.error);\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id, name) => {\n    const result = window.confirm(`Delete ${name}?`)\n    \n    if(result) {\n      personService\n        .deletePerson(id)\n        .then(setPersons(persons.filter(n => n.id !== id)))\n        \n\n      setNewQuery('')\n      setFilteredList([])\n      setFiltering(false)\n      showNotification(`Deleted ${name} from the contact list`, 'success')\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleQueryChange= (event) => {\n    event.target.value.length > 0 \n      ? setFiltering(true) \n      : setFiltering(false)\n      \n    setNewQuery(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter \n        newQuery={newQuery} \n        handleQueryChange={handleQueryChange}\n      />\n      <h2>Add a new Contact</h2>\n      <ContactForm \n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addName={addName} \n      />\n      <h2>Numbers</h2>\n      <ContactList \n        isFiltering={isFiltering}\n        persons={persons}\n        filteredList={filteredList}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}